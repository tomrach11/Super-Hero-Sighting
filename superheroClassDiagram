====== DTO ======
Character
-characterId : int
-name : String
-description : String
-superPower : String
-type : String
-organizations : List<Organization>


Organization
-organizationId : int
-name : String
-description : String
-location : Location
-phone : String
-email : String
-characters : List<Character>

Location
-locationId : int
-latitude : double
-longitude : double
-street : String
-city : String
-state : String
-zipcode : String

Sighting
-sightingId : int
-character : Character
-location : Location
date : LocalDateTime


======= DAO =======
-----Interface-----
+DAO<T>
    +Create(T model) : T
    +ReadAll() : List<T>
    +ReadById(int id) : T
    +Update(T model)  : void
    +Delete(int id) : void

-----RowMapper-----
+RowMapper<T>
    +mapRow(Resultset resultSet, int index) : List<T>

+CharacterMapper : RowMapper<Character>
+OrganizationMapper : RowMapper<Organization>
+LocationMapper : RowMapper<Location>
+SightingMapper : RowMapper<Sighting>

-----Dao Implementation-----
+CharacterDao : DAO<Character>
    -JdbcTemplete jdbc
    +getOrganizationByCharacterId(int characterId) : List<Organization>
    +associateCharacterAndOrganization(List<Character> : characters) : void

+OrganizationDao : DAO<Organizatoin>
    -JdbcTemplete jdbc
    +getCharacterByOrganizationId(int organizationId) : List<Character>

+LocationDao : DAO<Location>
    -JdbcTemplete jdbc

+SightingDao : DAO<Sighting>
    -JdbcTemplete jdbc
    +getCharacterByLocationId(int locationId) : List<Character>
    +getLocationByCharacterId(int characterId) : List<Location>
